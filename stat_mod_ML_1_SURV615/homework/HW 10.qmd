---
title: Homework 10
author: Kevin Linares and Jamila Sani
date: "`r format(Sys.time(), '%d %B, %Y')`"
embed-resources: true
editor: visual
execute:
  warning: false
  error: false
  tidy: true
format: pdf
theme: lux
---

## Use rats data in the faraway package.

-   Description: An experiment was conducted as part of an investigation to combat the effects of certain toxic agents.

-   Format: A data frame with 48 observations on the following 3 variables:

  -   time: survival time in tens of hours

  -   poison: the poison type - a factor with levels I, II, and III randomly assigned to subjects

  -   treat: the treatment - a factor with levels A, B, C, and D randomly assigned to subjects
  

```{r setup, include=FALSE, tidy=TRUE}
knitr::opts_chunk$set(echo=TRUE,cache=TRUE, 
                      autodep=TRUE, cache.comments=FALSE,
                      message=FALSE, warning=FALSE,
                      fig.width=4.5, fig.height=3)
```

```{r, echo=FALSE}
library(janitor)
library(faraway)
library(MASS)
library(lme4) # model random effects
library(performance) # for random effect model summary
library(tidyverse)
```

```{r}
data(rats)
summary(rats)
glimpse(rats)
rats %>%
  tabyl(poison,treat) # janitor::tabyl() 
```

## 1. Focus on time as the response and treat as the predictor. Plot time as a function of treat using a jittered scatter plot. Add a mean of time for each level of treat to the plot. What pattern do you see?

- Survival time is longest for treatment B followed by treatment D. Treatment A has the shortest survival time and the smallest variability.
```{r}
(means <- aggregate(time~treat,rats, mean))


ggplot(rats,aes(x=treat, y=time))+
  geom_point(position=position_jitter(width=0.1)) +
  stat_summary(fun="mean", colour = "red")+
  geom_text(data = means, 
            aes(label = round(time, 2)),
            vjust = 0, hjust = -0.3, size = 4, color="red") 
```

## 2. Perform a one-way ANOVA with time as the response and treat as the predictor. Use aov() as well as lm(). For each, describe what you observe about what can be concluded.

-   They have the same F-statistic (6.48) and p-value (0.000992) indicating that there is significant effect of treatment on time.
-   aov() neither included the intercept nor the levels of treatments. Its p-value (0.000992) supports rejecting the null that there is no difference among the group means - in favor of the alternative hypothesis (at least one group mean is different).
-   lm() included the intercept (reference group) and all the other three levels (B,C,D) of treatment. The p-values of the treatment coefficients suggests that the means for treatments B and D are different from the reference group (treatment A) while treatment C is not significantly different from treatment A.


```{r}
summary(aov(time~treat,rats))
anova(lm(time~treat,rats))
summary(lm(time~treat,rats))
```
## 3. Perform pairwise comparisons using Tukeyâ€™s difference test. Which pairs of treatment are different? How does this compare to your results from #2?

-   The following pairs are different: B-A and C-B as they have p-values < 0.05
-   The p-values in the Tukey's difference test were larger than in #2 as Tukey's test accounts for the number of comparisons making it more robust while controlling for Type I error.

```{r}
TukeyHSD(aov(time~treat,rats))
```


## 4. Go back to your plot from #1 and add lines showing time as at the interaction of poison and treat. Does the pattern from #1 hold across poison types?

- The pattern from #1 is consistent with the pattern observed here - treatment B has the longest survival time, next is treatment D, then treatment C, while treatment A has the shortest survival time.

- In the first plot we see that treatment B and poison type I and II have higher survival time, followed by the same poison types and treatment D. Flipping the graphic around, we can easily see how treatment B declines across poison types with the largest surviving time for poison type I, followed by II, and lastly III. We see the same trend for treatment types A and C. However, for treatment D, the highest survival time is in combination with poison II, followed by I, and lastly III. 

```{r}
ggplot(rats,aes(x=treat,y=time))+
  geom_point(position=position_jitter(width=0.2))+
  stat_summary(fun=mean, geom="point", color="red",size=2)+
  stat_summary(fun=mean, geom="line", 
               aes(group=poison, linetype=poison)) 

ggplot(rats,aes(x=poison,y=time))+
  geom_point(position=position_jitter(width=0.2))+
  stat_summary(fun=mean, geom="point", color="blue",size=2)+
  stat_summary(fun=mean, geom="line", 
               aes(group=treat, linetype=treat, color=treat)) 
```

## 5. Model time as a function of treat, poison, and their interaction in a linear regression. Check whether OLS assumptions hold, and if not, what (if any) transformation of the outcome might present a solution.

- The OLS assumptions do not appear to be met. Data on the qq-plot are positively skewed and the constant variance appears to be violated.
- Since lambda is closer to -0.5, an inverse square root transformation is a potential solution. Other possible recommendations based on choice of lambda are:
   -    lambda = 0 => log transformation 
   -    lamda = -1 => reciprocal transformation

```{r}

summary(rat_ols <- lm(time~treat*poison,rats))
```

```{r}

qqnorm(rat_ols$resid);qqline(rat_ols$resid)
plot(jitter(rat_ols$fitted),jitter(rat_ols$resid));abline(h=0)
boxcox(lm(time~treat,rats))
```

## 6. Now fit a model of time as a function of treat, but with treat as a random effect. Interpret the effect of treat on time.
-   The fixed intercept of .48, survival time was significant (p<.05) with a 95% confidence interval between .32 and .64 and does not include zero => reject null hypothesis: variance from treatment does contribute to the overall variance therefore, there may be meaningful differences between treatments. Furthermore, we calculate the intraclass correlation (ICC) to be .31 which is the proportion of variance in time values explained by the grouping structure of treatment.

```{r}
# (1|treat) means we are fitting as random effect 
summary(randmod<-lmer(time~(1|treat), rats))

confint(randmod)

performance::icc(randmod)
```




